plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'dev.nours'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url = 'https://hub.jeff-media.com/nexus/repository/jeff-media-public/'
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.20.2-R0.1-SNAPSHOT"

    compileOnly 'com.github.LoneDev6:API-ItemsAdder:3.6.1'

    implementation 'dev.dejvokep:boosted-yaml-spigot:1.3'

    implementation 'com.github.Revxrsal.Lamp:common:3.1.9'
    implementation 'com.github.Revxrsal.Lamp:bukkit:3.1.9'
    implementation 'com.jeff_media:MorePersistentDataTypes:2.4.0'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks {
    build {
        dependsOn(shadowJar)

        shadowJar {
            destinationDirectory.set(file("C:/Users/Kevin/Desktop/ATLANTIS/Developpement/SERVEUR/plugins"))
            minimize()

            exclude("META-INF/**")

            archiveFileName.set("AtlantisGenerators-${project.version}.jar")
            archiveClassifier.set("shadow")

            relocate 'dev.dejvokep.boostedyaml', 'dev.nours.libs.boostedyaml'
            relocate 'com.jeff_media.morepersistentdatatypes', 'dev.nours.libs.morepersistentdatatypes'
        }
    }
}