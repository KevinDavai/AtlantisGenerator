plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'io.papermc.paperweight.userdev' version '1.5.11'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'com.github.johnrengelman.shadow'

    group = 'dev.nours'
    version = '1.0.0'

    repositories {
        mavenCentral()
        maven {
            name = "papermc-repo"
            url = uri("https://repo.papermc.io/repository/maven-public/")
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/groups/public/"
        }
    }

}

List<String> nmsVersions = Arrays.asList("v1_20_R2");
dependencies {
    paperweight.paperDevBundle("1.20-R0.1-SNAPSHOT")

    implementation(project(":NMS:Wrapper"))
    for (version in nmsVersions) {
        implementation(project(":NMS:${version}"))
    }

    implementation 'dev.dejvokep:boosted-yaml-spigot:1.3'
}

/*
def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks {
    build {
        dependsOn(shadowJar)

        shadowJar {
            destinationDirectory.set(file("C:/Users/Kevin/Desktop/ATLANTIS/Developpement/SERVEUR/plugins"))
            minimize()

            exclude("META-INF/**")

            archiveFileName.set("AtlantisBanks-${project.version}.jar")
            archiveClassifier.set("shadow")

            relocate 'dev.dejvokep.boostedyaml', 'me.plugin.libs'
        }
    }
}*/
